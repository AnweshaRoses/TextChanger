{"version":3,"sources":["component/About.js","component/Navbar.js","component/Textform.js","component/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","myStyle","color","mode","backgroundColor","className","style","id","type","Navbar","to","title","aboutText","class","onClick","toggleMode","role","htmlFor","Textform","useState","text","setText","heading","value","onChange","event","target","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","split","join","CapitalizeWords","i","previousCharacter","filter","element","defaultProps","Alert","height","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","document","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.df6e9aad.chunk.js","sourcesContent":["import React  from 'react'\r\n\r\nexport default function About(props) {\r\n    // const[myStyle,setMyStyle]=useState(\r\n    // {\r\n    //     color:'black',\r\n    //     backgroundColor:'white'\r\n    // }\r\n    // )\r\n    let myStyle={\r\n        color:props.mode==='dark'?'white':'#121212',\r\n        backgroundColor:props.mode==='dark'?'#121212':'white'\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container\" style={myStyle}>\r\n            <div className=\"accordion\" id=\"accordionExample\" style={myStyle}>\r\n                <h3 className=\"my-3\">About us</h3>\r\n        <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingOne\">\r\n            <button className=\"accordion-button\" type=\"button\" style={myStyle}  data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n             <strong>Basic function</strong>   \r\n            </button>\r\n            </h2>\r\n            <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n                Text changer lets you carry out certain functions to manipulate your text, it supports many languages but we suggest \r\n                sticking to english to get full benifit of it, if you have any quaries feel free to message me on discord Anwesha#0811 or mail me at anwesharoses@gmail.com\r\n            </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                <strong>Functions of different buttons</strong>\r\n            </button>\r\n            </h2>\r\n            <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n               <p> <strong>Uppercase:</strong>  Converts any text into uppercase.</p> \r\n               <p> <strong>Lowercase:</strong> Converts any text into lowercase.</p>\r\n               <p> <strong>Clear Text:</strong> Clears any texts written in the box.</p>\r\n               <p> <strong>Copy Text:</strong>  Copies your text to the clipboard.</p>\r\n               <p> <strong>Remove Extra Spaces:</strong>  Removes any extra spaces but it will leave one space by default.</p>\r\n               <p> <strong> Capatalize:</strong> Makes only the first letter capital or any letter after fullstop, make sure its indented properly.</p>\r\n            </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                <strong>Compatability</strong>\r\n            </button>\r\n            </h2>\r\n            <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n                This is a responsive website so it will work on all your devices let me be your smartphone, tablet, laptop or desktop.\r\n                To access the about and the dark mode on your phone and tablet please click on the three lines present on the right hand side top corner of your device.\r\n            </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        {/* <div className=\"container my-3\">\r\n        <button onClick={toggleStyle} type=\"button\" className=\"btn btn-primary\">{btntext}</button>\r\n        </div> */}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n// use impt to import proptypes\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          {/* <a className=\"navbar-brand\" href=\"#\">{props.title}</a> */}\r\n          <Link className=\"navbar-brand\"to=\"/\">{props.title}</Link>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                {/* <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a> */}\r\n                <Link className=\"nav-link \" aria-current=\"page\" to=\"/\">Home</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n              </li>\r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n            </form> */}\r\n            <div class={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`} >\r\n              <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n//use pts for proptype. string\r\nNavbar.propTypes={title:PropTypes.string,\r\n                  aboutText: PropTypes.string\r\n}\r\nNavbar.defaultProps={\r\n    title:\"Set title here\",\r\n    aboutText:\"About text here\"\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport default function Textform(props) {\r\n    \r\n    const handleUpclick=()=>{\r\n        // console.log(\"Upclick\"+text);\r\n        let newText=text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\" Converted to uppercase\", \"success\");\r\n    }\r\n    const handleLoclick=()=>{\r\n        // console.log(\"Upclick\"+text);\r\n        let newText=text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\" Converted to lowercase\", \"success\");\r\n    }\r\n    const handleToclearclick=()=>{\r\n        // console.log(\"Upclick\"+text);\r\n        let newText='';\r\n        setText(newText);\r\n        props.showAlert(\" Cleared text \", \"success\");\r\n    }\r\n    const handlecopy=()=>{\r\n        // var text=document.getElementById(\"mybox\");\r\n        // text.select();\r\n        navigator.clipboard.writeText(text);\r\n        // document.getSelection().removeAllRanges();\r\n        props.showAlert(\" Copied to clipboard\", \"success\");\r\n    }\r\n    const handleExtraclick=()=>{\r\n       let newText=text.split(/[ ]+/);\r\n       setText(newText.join(\" \"));\r\n       props.showAlert(\" Extra spaces removed\", \"success\");\r\n    }\r\n    const handleCapitalclick=()=>{\r\n        let CapitalizeWords = text[0].toUpperCase();  \r\n        for (let i = 1; i <= text.length - 1; i++) {  \r\n            let currentCharacter,  previousCharacter = text[i - 2];  \r\n            if (previousCharacter && previousCharacter === '.') {  \r\n                currentCharacter = text[i].toUpperCase();  \r\n            } else {  \r\n                currentCharacter = text[i];  \r\n            }  \r\n            CapitalizeWords = CapitalizeWords + currentCharacter;  \r\n        }  \r\n        setText(CapitalizeWords);\r\n        props.showAlert(\" Capitalized first word\", \"success\");\r\n     }\r\n    const handleclick=(event)=>{\r\n        // console.log(\"clicked\");\r\n        setText(event.target.value);\r\n    }\r\n    // const[text,setText]=useState('Enter your text');\r\n    const[text,setText]=useState('');\r\n    return (\r\n        <>\r\n        <div className=\"container\"style={{color:props.mode==='dark'?'white':'black'}} >\r\n            <h3>{props.heading}</h3>\r\n         <div className=\"mb-3\">\r\n         <textarea className=\"form-control\" value={text} onChange={handleclick} style={{backgroundColor:props.mode==='dark'?'#121212':'white',color:props.mode==='dark'?'white':'black'}} id=\"mybox\" rows=\"8\"></textarea>\r\n        </div>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-3 my-1\" onClick={handleUpclick}>Uppercase Text</button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-3 my-1\" onClick={handleLoclick}>Lowercase Text</button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-3 my-1\"  onClick={handleToclearclick}>Clear Text</button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-3 my-1\" onClick={handlecopy}>Copy Text</button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-3 my-1\" onClick={handleExtraclick}>Remove Extra Spaces</button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-3 my-1\" onClick={handleCapitalclick}>Capitalize</button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n            <h3>Your text summary </h3>\r\n            <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\r\n            <p>{0.008*text.split(\" \").filter((element)=>{return element.length!==0}).length}s Read time</p>\r\n            <h4>Preview</h4>\r\n            <p>{text}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize=(word)=>{\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n    return (\r\n    <div style={{height:'50px'}}>\r\n\r\n    {props.alert &&<div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong> :{props.alert.msg}\r\n        \r\n    </div>}\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","\nimport './App.css';\nimport About from './component/About';\nimport Navbar from './component/Navbar';\nimport Textform from './component/Textform';\nimport React, { useState } from 'react';\nimport Alert from './component/Alert';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  // Link\n} from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert=(message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    },1000 );\n  }\n  const toggleMode=()=>{\n    if(mode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor='#121212';\n      showAlert(\" Dark mode has been enabled\",\"success\");\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor='white';\n      showAlert(\" Lightmode mode has been enabled\",\"success\");\n    }\n  }\n  return (\n  <>\n\n<Router>\n<Navbar title=\"Textchanger\" aboutText=\"About Us\" mode={mode} toggleMode={toggleMode}/>\n<Alert alert={alert}/>\n<div className=\"container my-3\">\n<Switch>\n          <Route exact path=\"/about\">\n            <About mode={mode} />\n          </Route>\n          <Route exact path=\"/\">\n          <Textform showAlert={showAlert} heading=\"Enter text to analyze \"mode={mode}/>\n          </Route>\n        </Switch>\n{/* <About/> */}\n</div>\n</Router>\n\n\n  </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}